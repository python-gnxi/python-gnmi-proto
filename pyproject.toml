[build-system]
requires = ["poetry-core>=1.0.0a5"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "gnmi-proto"
version = "0.1.0a4"
description = "A python package containing gnmi proto specification and generated python code."
authors = ["Arun Babu Neelicattu <arun.neelicattu@gmail.com>"]
license = "APLv2"
packages = [
    { include = "gnmi", from = "src" },
]
readme = "README.md"
homepage = "https://github.com/python-gnxi"
repository = "https://github.com/python-gnxi/python-gnmi-proto"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Networking",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.6"
protobuf = "^3.12"
grpcio = "^1.30"
betterproto = { version = "^2.0.0b1", allow-prereleases = true }

[tool.poetry.dev-dependencies]
grpcio-tools = "^1.30"
black = "^19.10b0"
pre-commit = { version = "^2.3.0", python = "^3.6.1" }
pytest = "^5.4"
pytest-asyncio = "^0.12"
betterproto = { version = "^2.0.0b3", allow-prereleases = true, extras = ["compiler"] }

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
    \.git
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | \.eggs
  | _pb2(_grpc)?\.py
)
'''

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.3.0
isolated_build = True
envlist = py36, py37, py38

[testenv]
whitelist_externals = poetry
skip_install = true
commands =
    poetry install
    poetry run pytest {posargs} tests/
"""
